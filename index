#!/usr/bin/env node

const program = require('commander');
const inquirer = require('inquirer');
const moment = require('moment');
const pgk = require('./package.json');
const {readAllHira, randomReadOne, write, review} = require('./hiragana');

program
  .version(pgk.version)
  .description('carrot notes cli');

program
  .command('add <hiragana> <interpretation>')
  .description('Add hiragana with interpretation')
  .action((hiragana, interpretation) => {
    return write({
      hiragana,
      interpretation,
      created: moment().toString(),
      reviews: []
    })
    .then(() => {
      console.log(`\n 💿  - "${hiragana}" added done.`);
    });
  });

program
  .command('kanji <kanji> <hiragana> <definition>')
  .description('Add kanji with definition')
  .action((kanji, hiragana, definition) => {
    console.log('kanji "%s"', kanji);
    console.log('hiragana "%s"', hiragana);
    console.log('definition "%s"', definition);
  });

program
  .command('list').alias('ls')
  .action(() => {
    readAllHira().map(hira => {
      console.log(` - ${hira}`);
    })
  });

program
  .command('review').alias('re')
  .action(() => {
    const {db, value} = randomReadOne();
    const question = {
      type: 'confirm',
      name: 'awareness',
      message: 'Do you remember a sentence below. \n ' +
      `"${value.hiragana}"`
    };
    inquirer.prompt(question)
      .then(({awareness}) => {
        return review(db, value, awareness)
          .then(({interpretation}) => {
            if (awareness) {
              console.log('\n 👍  great!!');
            }else {
              console.log('\n  ✋  cheer up!!!!');
            }
            console.log(`\n 📕  - ${interpretation}`);
          })
      })
  });

program.parse(process.argv);

if (!program.args.length) {
  console.log('\n');
  console.log('   Carrot notes 🥕');
  console.log('   v' + pgk.version);
}
